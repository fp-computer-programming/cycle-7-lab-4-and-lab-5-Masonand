# Author: Mason Andrews
def find_sum(num1, num2):
    num_sum = num1 + num2
    return num_sum


test_case1_result = find_sum(5, 10)
print("Test Case 1 Result:", test_case1_result)

test_case2_result = find_sum(-2, 8)
print("Test Case 2 Result:", test_case2_result)

test_case3_result = find_sum(0, 0)
print("Test Case 3 Result:", "Sum is zero" if test_case3_result == 0 else "Sum is not zero")

test_case4_result = find_sum(3.5, 2.5)
print("Test Case 4 Result:", "Sum is greater than 5" if test_case4_result > 5 else "Sum is not greater than 5")

# lab_7-5.py

def create_color_list():
    colors = ["red", "blue", "green", "yellow"]
    return colors

test_case1_result = create_color_list()
print("Test Case 1 Result:", test_case1_result)

def create_word_length_list(word1, word2, word3, word4, word5):
    words_list = [word1, word2, word3, word4, word5]
    lengths_list = [len(word) for word in words_list]
    return lengths_list

test_case2_result = create_word_length_list("apple", "banana", "orange", "grape", "kiwi")
print("Test Case 2 Result:", test_case2_result)

def double_numeric_values(num1, num2, num3):
    numbers = [num1, num2, num3]
    doubled_values = [int(2 * num) for num in numbers]
    return doubled_values

test_case3_result = double_numeric_values(5, 10, 15)
print("Test Case 3 Result:", test_case3_result)

def determine_numeric_properties(num1, num2, num3):
    numbers = [num1, num2, num3]

    if all(num % 2 == 0 for num in numbers):
        return "even"
    elif all(num % 2 != 0 for num in numbers):
        return "odd"
    else:
        return "mixed"

\test_case4_result = determine_numeric_properties(2, 4, 6)
print("Test Case 4 Result:", test_case4_result)
